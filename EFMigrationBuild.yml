- task: PowerShell@2
  displayName: Build EF Core Migration Bundle
  inputs:
    targetType: inline
    script: |
      # 1. Install / update EF CLI
      dotnet tool install --global dotnet-ef --version 9.0.4
      $env:PATH += ";$env:USERPROFILE\.dotnet\tools"

      # 2. Find your EF project
      Write-Host "üîç Searching for .csproj under $(Build.SourcesDirectory)..."
      $csproj = Get-ChildItem -Path "$(Build.SourcesDirectory)" -Recurse -Filter *.csproj `
                | Where-Object { $_.Name -notmatch 'Test|Sample' } `
                | Select-Object -First 1
      if (-not $csproj) {
        Write-Error "‚ùå No .csproj found under $(Build.SourcesDirectory)"
        exit 1
      }
      $projectPath   = $csproj.FullName
      $projectFolder = Split-Path $projectPath -Parent
      Write-Host "‚úÖ Found project: $projectPath"
      Write-Host "##vso[task.setvariable variable=EFProjectPath]$projectPath"

      # 3. Prepare bundle output folder
      $bundleDir = "$(Build.ArtifactStagingDirectory)\EFBundle"
      New-Item -ItemType Directory -Path $bundleDir -Force | Out-Null

      # 4. Explicitly build & bundle in the project folder
      Push-Location $projectFolder

      Write-Host "üîß Building project..."
      dotnet build "$projectPath" --configuration Release --framework net8.0

      Write-Host "üì¶ Bundling migrations..."
      dotnet ef migrations bundle `
        --project "$projectPath" `
        --startup-project "$projectPath" `
        --configuration Release `
        --framework net8.0 `
        --runtime win-x64 `
        --self-contained `
        --output "$bundleDir\bundle.exe"

      Pop-Location

      # 5. Verify the bundle
      if (Test-Path "$bundleDir\bundle.exe") {
        Write-Host "‚úÖ bundle.exe created at $bundleDir\bundle.exe"
      } else {
        Write-Error "‚ùå bundle.exe not found in $bundleDir"
        exit 1
      }
  workingDirectory: '$(Build.SourcesDirectory)'
